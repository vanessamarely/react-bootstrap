{"version":3,"sources":["components/Footer/Footer.js","components/Header/Header.js","container/Home/Home.js","container/Profile/components/Badge/Badge.js","components/Modal/ConfirmationModal.js","components/Modal/Modal.js","container/Profile/components/Events/Events.js","container/Profile/components/Groups/Groups.js","container/Profile/components/MyProfile/MyProfile.js","container/Profile/Profile.js","components/Router.js","App.js","reportWebVitals.js","index.js"],"names":["Footer","className","Header","to","Nav","activeKey","Item","Dropdown","Toggle","id","Menu","Home","Badge","useState","badges","setBadges","loadData","a","fetch","response","json","data","useEffect","map","index","avatar","name","description","intructions","Card","Img","src","Body","Title","Text","ConfirmationModal","show","onClose","handleConfirmation","Modal","size","onHide","aria-labelledby","closeButton","Button","variant","onClick","ModalComponent","Events","userEvents","eventList","setEventList","setShow","idToConfirm","setIdToConfirm","showConfirmation","setShowConfirmation","checkJoinedGEvents","joinedEvents","filter","join","handleEvents","value","state","newArray","values","image","handleModel","handleModelConfirmation","Groups","userGroups","initial","setInitialData","groups","setGroups","checkJoinedGroups","joinedGroups","handleGroups","handleAbandon","DropdownButton","title","onSelect","option","filteredData","language","length","eventKey","Form","Group","Control","type","placeholder","onChange","text","groupName","target","trim","MyProfile","user","alt","biography","events","InitialValue","Profile","setUser","Tab","Container","defaultActiveKey","Row","Link","Content","Pane","badgesbyGroups","Object","keys","badgesEvents","concat","Router","from","path","component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.94a9a134.chunk.js","sourcesContent":["import \"./Footer.scss\";\n\nconst Footer = () => (\n  <footer className=\"footer\">\n    <p>&copy; 2021</p>\n  </footer>\n);\nexport default Footer;\n","import { Link } from \"react-router-dom\";\nimport { Dropdown, Nav } from \"react-bootstrap\";\n\nimport \"./Header.scss\";\n\nconst Header = () => (\n  <header className=\"header\">\n    <h1 className=\"header__logo\">\n      <Link className=\"link\" to=\"/home\">\n        My APP\n      </Link>\n    </h1>\n    <Nav className=\"header__menu\" activeKey=\"/home\">\n      <Nav.Item>\n        <Link className=\"link\" to=\"/home\">\n          Home\n        </Link>\n      </Nav.Item>\n    </Nav>\n    <Dropdown className=\"header__user\">\n      <Dropdown.Toggle id=\"dropdown-basic\">Username</Dropdown.Toggle>\n\n      <Dropdown.Menu className=\"header__user__menu\">\n        <Link className=\"link\" to=\"/profile\">\n          Profile\n        </Link>\n        <Link className=\"link\" to=\"/logout\">\n          Logout\n        </Link>\n      </Dropdown.Menu>\n    </Dropdown>\n  </header>\n);\nexport default Header;\n","import './Home.scss';\n\nconst Home = () => <main className=\"main\">home</main>;\nexport default Home;\n","import { useEffect, useState } from \"react\";\n\nimport \"./Badge.scss\";\nimport { Card } from \"react-bootstrap\";\n\nconst API_URL = \"https://run.mocky.io/v3/9d5363d8-d5f6-43aa-b1b0-9c9d26d74526\";\n\nconst Badge = () => {\n  const [badges, setBadges] = useState([]);\n\n  const loadData = async () => {\n    const response = await fetch(API_URL);\n    const data = await response.json();\n    setBadges(data);\n    \n  };\n\n  useEffect(() => {\n    loadData();\n    return () => {};\n  }, []);\n\n  return (\n    <section className=\"badges\">\n      <h3 className=\"badges__title\">Badges</h3>\n      <div className=\"badges__cards\">\n        {badges.map(({ avatar, name, description, intructions }, index) => (\n          <Card key={index}>\n            <Card.Img className=\"card__img\" src={avatar} />\n            <Card.Body>\n              <h4 className=\"badge-name\">{name}</h4>\n              <Card.Title>Description</Card.Title>\n              <Card.Text>{description}</Card.Text>\n              <hr />\n              <Card.Title>How to get it?</Card.Title>\n              <Card.Text>{intructions}</Card.Text>\n            </Card.Body>\n          </Card>\n        ))}\n      </div>\n    </section>\n  );\n};\n\nexport default Badge;\n","import { Button, Modal } from \"react-bootstrap\";\n\nconst ConfirmationModal = ({ show, onClose, handleConfirmation }) => {\n  return (\n    <>\n      <Modal\n        size=\"sm\"\n        show={show}\n        onHide={onClose}\n        aria-labelledby=\"example-modal-sizes-title-sm\"\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"example-modal-sizes-title-sm\">\n            Are you sure?\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Please click on confirm to accept</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={onClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleConfirmation}>\n            Confirm!\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default ConfirmationModal;\n","import { Modal } from \"react-bootstrap\";\n\nconst ModalComponent = ({ show, onClose }) => {\n  return (\n    <>\n      <Modal\n        size=\"sm\"\n        show={show}\n        onHide={onClose}\n        aria-labelledby=\"example-modal-sizes-title-sm\"\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"example-modal-sizes-title-sm\">\n            Congrats!!\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>You joined successfully!!'</Modal.Body>\n      </Modal>\n    </>\n  );\n};\n\nexport default ModalComponent;\n","import { useEffect, useState } from \"react\";\nimport { Badge, Button, Card } from \"react-bootstrap\";\nimport ConfirmationModal from \"./../../../../components/Modal/ConfirmationModal\";\nimport ModalComponent from \"./../../../../components/Modal/Modal\";\nimport \"./Events.scss\";\n\nconst API_URL = \"https://run.mocky.io/v3/4c755975-6142-459a-9bb8-2cc37efadb7e\";\n\nconst Events = ({userEvents}) => {\n  const [eventList, setEventList] = useState([]);\n  const [show, setShow] = useState(false);\n  const [idToConfirm, setIdToConfirm] = useState('');\n  const [showConfirmation, setShowConfirmation] = useState(false);\n\n  const checkJoinedGEvents = () => {\n    const joinedEvents = eventList.filter( ({join}) => join === true);\n    // const data =  JSON.parse(sessionStorage.getItem('user'));\n    // data.events = joinedEvents;\n    userEvents(joinedEvents);\n    //sessionStorage.setItem('user', JSON.stringify(data));\n  };\n\n  const loadData = async () => {\n    const response = await fetch(API_URL);\n    const data = await response.json();\n    setEventList(data);\n    checkJoinedGEvents();\n  };\n\n  useEffect(() => {\n    loadData();\n    return () => {};\n  }, []);\n\n  const handleEvents = (value, state) => {\n    const newArray = eventList.map((values) => {\n      if (values.id === value) {\n        values.join = state;\n      }\n      return values;\n    });\n    setEventList(newArray);\n    checkJoinedGEvents();\n  };\n\n  const handleModel = (id) => {\n    handleEvents(id, true);\n    setShow(true);\n  };\n\n  const handleConfirmation = () => {\n    setShowConfirmation(false);\n    handleEvents(idToConfirm, false);\n  };\n\n  const handleModelConfirmation = (id) => {\n    setShowConfirmation(true);\n    setIdToConfirm(id);\n  };\n\n  return (\n    <section className=\"events\">\n      <h3 className=\"events__title\">Events</h3>\n      <div className=\"events__cards\">\n        {eventList.map(({ image, id, name, join }, index) => (\n          <>\n            <Card key={index}>\n              <Card.Img className=\"card__img\" src={image} />\n              <Card.Body>\n                <h4 className=\"event-name\">{name}</h4>\n                {join && <Badge variant=\"primary\">joined</Badge>}\n                <div>\n                  {!join && (\n                    <Button variant=\"secondary\" onClick={() => handleModel(id)}>\n                      Join\n                    </Button>\n                  )}\n                  {join && (\n                    <Button\n                      variant=\"secondary\"\n                      onClick={() => handleModelConfirmation(id)}\n                    >\n                      Abandon\n                    </Button>\n                  )}\n                </div>\n              </Card.Body>\n            </Card>\n            <ConfirmationModal\n              show={showConfirmation}\n              onClose={() => setShowConfirmation(false)}\n              handleConfirmation={handleConfirmation}\n            />\n          </>\n        ))}\n      </div>\n      <ModalComponent show={show} onClose={() => setShow(false)} />\n    </section>\n  );\n};\n\nexport default Events;\n","import { useEffect, useState } from \"react\";\nimport {\n  Badge,\n  Button,\n  Card,\n  Dropdown,\n  DropdownButton,\n  Form,\n} from \"react-bootstrap\";\nimport ConfirmationModal from \"./../../../../components/Modal/ConfirmationModal\";\nimport ModalComponent from \"./../../../../components/Modal/Modal\";\nimport \"./Groups.scss\";\n\nconst API_URL = \"https://run.mocky.io/v3/6a493a14-4155-463c-9f08-24be7e91cb6d\";\n\nconst Groups = ({userGroups}) => {\n  const [initial, setInitialData] = useState([]);\n  const [groups, setGroups] = useState([]);\n  const [show, setShow] = useState(false);\n  const [idToConfirm, setIdToConfirm] = useState('');\n  const [showConfirmation, setShowConfirmation] = useState(false);\n\n  const checkJoinedGroups = () => {\n    const joinedGroups = groups.filter( ({join}) => join === true);\n    // const data =  JSON.parse(sessionStorage.getItem('user'));\n    // data.groups = joinedGroups;\n    userGroups(joinedGroups);\n    //sessionStorage.setItem('user', JSON.stringify(data));\n  };\n\n  const loadData = async () => {\n    const response = await fetch(API_URL);\n    const data = await response.json();\n    setGroups(data);\n    setInitialData(data);\n    checkJoinedGroups();\n  };\n\n  useEffect(() => {\n    loadData();\n    return () => {};\n  }, []);\n\n  const handleSelected = (option) => {\n    setGroups(initial);\n    const filteredData = groups.filter(({ language }) => language === option);\n    if (filteredData.length > 0) {\n      setGroups(filteredData);\n      checkJoinedGroups();\n    }\n  };\n\n  const handleSearchName = (text) => {\n    const groupName = text.target.value;\n    setGroups(initial);\n    const filteredData = groups.filter(\n      ({ name }) => name.trim() === groupName.trim()\n    );\n    if (filteredData.length > 0) {\n      setGroups(filteredData);\n      checkJoinedGroups();\n    }\n  };\n\n  const handleGroups = (value, state) => {\n    const newArray = groups.map((values) => {\n      if (values.id === value) {\n        values.join = state;\n      }\n      return values;\n    });\n    setGroups(newArray);\n    checkJoinedGroups();\n  };\n\n  const handleModel = (id) => {\n    handleGroups(id, true);\n    setShow(true);\n  };\n\n  const handleAbandon = () => {\n    setShowConfirmation(false);\n    handleGroups(idToConfirm, false);\n  };\n\n  const handleModelConfirmation = (id) => {\n    setShowConfirmation(true);\n    setIdToConfirm(id);\n  };\n\n  return (\n    <section className=\"groups\">\n      <h3 className=\"groups__title\">Groups</h3>\n      <div className=\"groups__filters\">\n        <DropdownButton\n          id=\"dropdown-basic-button\"\n          title=\"Dropdown button\"\n          onSelect={handleSelected}\n        >\n          <Dropdown.Item eventKey=\"all\">All</Dropdown.Item>\n          <Dropdown.Item eventKey=\"Javascript\">Javascript</Dropdown.Item>\n          <Dropdown.Item eventKey=\"Typescript\">Typescript</Dropdown.Item>\n        </DropdownButton>\n        <Form.Group className=\"groups__filters__search\">\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Search\"\n            onChange={handleSearchName}\n          />\n        </Form.Group>\n      </div>\n      <div className=\"groups__cards\">\n        {groups.map(({ id, image, language, name, join, description }) => (\n          <>\n            <Card key={id}>\n              <Card.Img className=\"card__img\" src={image} />\n              <Card.Body>\n                <p>\n                  <Badge variant=\"secondary\">{language}</Badge>\n                </p>\n                <h4 className=\"group-name\">{name}</h4>\n                <p>{description}</p>\n                {join && <Badge variant=\"primary\">joined</Badge>}\n                <div>\n                  {!join && (\n                    <Button variant=\"secondary\" onClick={() => handleModel(id)}>\n                      Join\n                    </Button>\n                  )}\n                  {join && (\n                    <Button\n                      variant=\"secondary\"\n                      onClick={() => handleModelConfirmation(id)}\n                    >\n                      Abandon\n                    </Button>\n                  )}\n                </div>\n              </Card.Body>\n            </Card>\n            <ConfirmationModal\n              show={showConfirmation}\n              onClose={() => setShowConfirmation(false)}\n              handleConfirmation={handleAbandon}\n            />\n          </>\n        ))}\n      </div>\n      <ModalComponent show={show} onClose={() => setShow(false)} />\n    </section>\n  );\n};\nexport default Groups;\n","\nimport \"./MyProfile.scss\";\n\nconst MyProfile = ({user}) => {\n\n  return (\n    <section className=\"my-profile\">\n      <div className=\"my-profile__image\">\n        <img src=\"https://picsum.photos/200/300\" alt=\"profile\" />\n      </div>\n      <div className=\"my-profile__content\">\n        <h3>Username: {user.name}</h3>\n        <p>{user.biography}</p>\n        <hr />\n        <h3>Badges</h3>\n        <ul>\n          {\n            user.badges.length > 0 && user.badges.map(({name}, index) => (\n              <li key={index}>Badge: {name}</li>\n            ))\n          }\n        </ul>\n        <hr />\n        <h3>Events</h3>\n        <ul>\n          {\n            user.events.length > 0 && user.events.map(({name}, index) => (\n              <li key={index}>Event: {name}</li>\n            ))\n          }\n        </ul>\n        <hr />\n        <h3>Groups</h3>\n        <ul>\n          {\n            user.groups.length > 0 && user.groups.map(({name}, index) => (\n              <li key={index}>Group: {name}</li>\n            ))\n          }\n        </ul>\n      </div>\n    </section>\n  );\n};\n\nexport default MyProfile;\n","import { useState, useEffect } from \"react\";\nimport \"./Profile.scss\";\nimport { Nav, Row, Tab } from \"react-bootstrap\";\nimport { Badge, Events, Groups, MyProfile } from \"./components\";\n\nconst InitialValue = {\n  name: \"Username\",\n  biography: \"This is my biography\",\n  badges: [],\n  groups: [],\n  events: [],\n};\n\nconst API_URL = \"https://run.mocky.io/v3/9d5363d8-d5f6-43aa-b1b0-9c9d26d74526\";\n\nconst Profile = () => {\n  const [user, setUser] = useState(InitialValue);\n  const [badges, setBadges] = useState([]);\n\n  const loadData = async () => {\n    const response = await fetch(API_URL);\n    const data = await response.json();\n    setBadges(data);\n  };\n\n  useEffect(() => {\n    loadData();\n    return () => {};\n  }, []);\n\n  const handleEvents = (data) => {\n    const countEvents = Object.keys(data).length;\n    let badgesEvents = [];\n    if (countEvents === 3) {\n      badgesEvents = badges.filter(({ name }) => name === \"Networking\");\n    }else{\n      badgesEvents = user.badges;\n    }\n    setUser({\n      name: \"Username\",\n      biography: \"This is my biography\",\n      badges: user.badges.concat(badgesEvents),\n      groups: user.groups,\n      events: data,\n    });\n  };\n\n  const handleGroups = (data) => {\n    const countGroups = Object.keys(data).length;\n    let badgesbyGroups = [];\n    if (countGroups >= 1) {\n      badgesbyGroups = badges.filter(({ name }) => name === \"Social\");\n    } else{\n      badgesbyGroups = user.badges;\n    }\n    \n    setUser({\n      name: \"Username\",\n      biography: \"This is my biography\",\n      badges: badgesbyGroups,\n      groups: data,\n      events: user.events,\n    });\n  };\n\n  const handleUserBadges = (data) => {\n    // setBadges(data);\n  };\n\n  return (\n    <main className=\"profile\">\n      <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\n        <Row className=\"justify-content-center\">\n          <Nav variant=\"pills\" className=\"flex-row profile__menu\">\n            <Nav.Item>\n              <Nav.Link eventKey=\"first\">Profile</Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link eventKey=\"second\">Badges</Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link eventKey=\"third\">Goups</Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link eventKey=\"fourth\">Events</Nav.Link>\n            </Nav.Item>\n          </Nav>\n        </Row>\n        <Row>\n          <Tab.Content className=\"profile__content\">\n            <Tab.Pane eventKey=\"first\">\n              <MyProfile user={user} />\n            </Tab.Pane>\n            <Tab.Pane eventKey=\"second\">\n              <Badge />\n            </Tab.Pane>\n            <Tab.Pane eventKey=\"third\">\n              <Groups userGroups={handleGroups} />\n            </Tab.Pane>\n            <Tab.Pane eventKey=\"fourth\">\n              <Events userEvents={handleEvents} />\n            </Tab.Pane>\n          </Tab.Content>\n        </Row>\n      </Tab.Container>\n    </main>\n  );\n};\n\nexport default Profile;\n","import { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\n\nimport Footer from './../components/Footer/Footer';\nimport Header from './../components/Header/Header';\nimport Home from './../container/Home/Home';\nimport Profile from './../container/Profile/Profile';\n\nconst Router = () => (\n  <BrowserRouter>\n    <Header />\n    <Redirect\n      from=\"/\"\n      to=\"/home\" />\n    <Switch>\n      <Route path=\"/home\" component={Home} />  \n      <Route path=\"/profile\" component={Profile} />  \n    </Switch>\n    <Footer />\n  </BrowserRouter>\n);\n\nexport default Router;","import Router from './components/Router';\nimport './App.scss';\n\nconst  App = () => (<Router />);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}