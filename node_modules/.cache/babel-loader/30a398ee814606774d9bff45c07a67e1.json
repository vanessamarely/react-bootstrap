{"ast":null,"code":"var _jsxFileName = \"/Users/vanessaaristizabal/development/react-projects/taller-comfeco/react-bootstrap/src/container/Profile/components/Groups/Groups.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Badge, Button, Card, Dropdown, DropdownButton, Form } from \"react-bootstrap\";\nimport ConfirmationModal from \"./../../../../components/Modal/ConfirmationModal\";\nimport ModalComponent from \"./../../../../components/Modal/Modal\";\nimport \"./Groups.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = \"https://run.mocky.io/v3/6a493a14-4155-463c-9f08-24be7e91cb6d\";\n\nconst Groups = ({\n  userGroups\n}) => {\n  _s();\n\n  const [initial, setInitialData] = useState([]);\n  const [groups, setGroups] = useState([]);\n  const [show, setShow] = useState(false);\n  const [idToConfirm, setIdToConfirm] = useState('');\n  const [showConfirmation, setShowConfirmation] = useState(false);\n\n  const checkJoinedGroups = () => {\n    const joinedGroups = groups.filter(({\n      join\n    }) => join === true); // const data =  JSON.parse(sessionStorage.getItem('user'));\n    // data.groups = joinedGroups;\n\n    userGroups(joinedGroups); //sessionStorage.setItem('user', JSON.stringify(data));\n  };\n\n  const loadData = async () => {\n    const response = await fetch(API_URL);\n    const data = await response.json();\n    setGroups(data);\n    setInitialData(data);\n    checkJoinedGroups();\n  };\n\n  useEffect(() => {\n    loadData();\n    return () => {};\n  }, []);\n\n  const handleSelected = option => {\n    setGroups(initial);\n    const filteredData = groups.filter(({\n      language\n    }) => language === option);\n\n    if (filteredData.length > 0) {\n      setGroups(filteredData);\n      checkJoinedGroups();\n    }\n  };\n\n  const handleSearchName = text => {\n    const groupName = text.target.value;\n    setGroups(initial);\n    const filteredData = groups.filter(({\n      name\n    }) => name.trim() === groupName.trim());\n\n    if (filteredData.length > 0) {\n      setGroups(filteredData);\n      checkJoinedGroups();\n    }\n  };\n\n  const handleGroups = (value, state) => {\n    const newArray = groups.map(values => {\n      if (values.id === value) {\n        values.join = state;\n      }\n\n      return values;\n    });\n    setGroups(newArray);\n    checkJoinedGroups();\n  };\n\n  const handleModel = id => {\n    handleGroups(id, true);\n    setShow(true);\n  };\n\n  const handleAbandon = () => {\n    setShowConfirmation(false);\n    handleGroups(idToConfirm, false);\n  };\n\n  const handleModelConfirmation = id => {\n    setShowConfirmation(true);\n    setIdToConfirm(id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"groups\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"groups__title\",\n      children: \"Groups\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"groups__filters\",\n      children: [/*#__PURE__*/_jsxDEV(DropdownButton, {\n        id: \"dropdown-basic-button\",\n        title: \"Dropdown button\",\n        onSelect: handleSelected,\n        children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          eventKey: \"all\",\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          eventKey: \"Javascript\",\n          children: \"Javascript\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          eventKey: \"Typescript\",\n          children: \"Typescript\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"groups__filters__search\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Search\",\n          onChange: handleSearchName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"groups__cards\",\n      children: groups.map(({\n        id,\n        image,\n        language,\n        name,\n        join,\n        description\n      }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            className: \"card__img\",\n            src: image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(Badge, {\n                variant: \"secondary\",\n                children: language\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"group-name\",\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this), join && /*#__PURE__*/_jsxDEV(Badge, {\n              variant: \"primary\",\n              children: \"joined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 26\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [!join && /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"secondary\",\n                onClick: () => handleModel(id),\n                children: \"Join\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 21\n              }, this), join && /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"secondary\",\n                onClick: () => handleModelConfirmation(id),\n                children: \"Abandon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ConfirmationModal, {\n          show: showConfirmation,\n          onClose: () => setShowConfirmation(false),\n          handleConfirmation: handleAbandon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalComponent, {\n      show: show,\n      onClose: () => setShow(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Groups, \"ulYhUfWJ39PlNpusJ1Y+0E70Z+Q=\");\n\n_c = Groups;\nexport default Groups;\n\nvar _c;\n\n$RefreshReg$(_c, \"Groups\");","map":{"version":3,"sources":["/Users/vanessaaristizabal/development/react-projects/taller-comfeco/react-bootstrap/src/container/Profile/components/Groups/Groups.js"],"names":["useEffect","useState","Badge","Button","Card","Dropdown","DropdownButton","Form","ConfirmationModal","ModalComponent","API_URL","Groups","userGroups","initial","setInitialData","groups","setGroups","show","setShow","idToConfirm","setIdToConfirm","showConfirmation","setShowConfirmation","checkJoinedGroups","joinedGroups","filter","join","loadData","response","fetch","data","json","handleSelected","option","filteredData","language","length","handleSearchName","text","groupName","target","value","name","trim","handleGroups","state","newArray","map","values","id","handleModel","handleAbandon","handleModelConfirmation","image","description"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SACEC,KADF,EAEEC,MAFF,EAGEC,IAHF,EAIEC,QAJF,EAKEC,cALF,EAMEC,IANF,QAOO,iBAPP;AAQA,OAAOC,iBAAP,MAA8B,kDAA9B;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,OAAO,eAAP;;;AAEA,MAAMC,OAAO,GAAG,8DAAhB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAkB;AAAA;;AAC/B,QAAM,CAACC,OAAD,EAAUC,cAAV,IAA4Bb,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACc,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACgB,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACkB,WAAD,EAAcC,cAAd,IAAgCnB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACoB,gBAAD,EAAmBC,mBAAnB,IAA0CrB,QAAQ,CAAC,KAAD,CAAxD;;AAEA,QAAMsB,iBAAiB,GAAG,MAAM;AAC9B,UAAMC,YAAY,GAAGT,MAAM,CAACU,MAAP,CAAe,CAAC;AAACC,MAAAA;AAAD,KAAD,KAAYA,IAAI,KAAK,IAApC,CAArB,CAD8B,CAE9B;AACA;;AACAd,IAAAA,UAAU,CAACY,YAAD,CAAV,CAJ8B,CAK9B;AACD,GAND;;AAQA,QAAMG,QAAQ,GAAG,YAAY;AAC3B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACnB,OAAD,CAA5B;AACA,UAAMoB,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAf,IAAAA,SAAS,CAACc,IAAD,CAAT;AACAhB,IAAAA,cAAc,CAACgB,IAAD,CAAd;AACAP,IAAAA,iBAAiB;AAClB,GAND;;AAQAvB,EAAAA,SAAS,CAAC,MAAM;AACd2B,IAAAA,QAAQ;AACR,WAAO,MAAM,CAAE,CAAf;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMK,cAAc,GAAIC,MAAD,IAAY;AACjCjB,IAAAA,SAAS,CAACH,OAAD,CAAT;AACA,UAAMqB,YAAY,GAAGnB,MAAM,CAACU,MAAP,CAAc,CAAC;AAAEU,MAAAA;AAAF,KAAD,KAAkBA,QAAQ,KAAKF,MAA7C,CAArB;;AACA,QAAIC,YAAY,CAACE,MAAb,GAAsB,CAA1B,EAA6B;AAC3BpB,MAAAA,SAAS,CAACkB,YAAD,CAAT;AACAX,MAAAA,iBAAiB;AAClB;AACF,GAPD;;AASA,QAAMc,gBAAgB,GAAIC,IAAD,IAAU;AACjC,UAAMC,SAAS,GAAGD,IAAI,CAACE,MAAL,CAAYC,KAA9B;AACAzB,IAAAA,SAAS,CAACH,OAAD,CAAT;AACA,UAAMqB,YAAY,GAAGnB,MAAM,CAACU,MAAP,CACnB,CAAC;AAAEiB,MAAAA;AAAF,KAAD,KAAcA,IAAI,CAACC,IAAL,OAAgBJ,SAAS,CAACI,IAAV,EADX,CAArB;;AAGA,QAAIT,YAAY,CAACE,MAAb,GAAsB,CAA1B,EAA6B;AAC3BpB,MAAAA,SAAS,CAACkB,YAAD,CAAT;AACAX,MAAAA,iBAAiB;AAClB;AACF,GAVD;;AAYA,QAAMqB,YAAY,GAAG,CAACH,KAAD,EAAQI,KAAR,KAAkB;AACrC,UAAMC,QAAQ,GAAG/B,MAAM,CAACgC,GAAP,CAAYC,MAAD,IAAY;AACtC,UAAIA,MAAM,CAACC,EAAP,KAAcR,KAAlB,EAAyB;AACvBO,QAAAA,MAAM,CAACtB,IAAP,GAAcmB,KAAd;AACD;;AACD,aAAOG,MAAP;AACD,KALgB,CAAjB;AAMAhC,IAAAA,SAAS,CAAC8B,QAAD,CAAT;AACAvB,IAAAA,iBAAiB;AAClB,GATD;;AAWA,QAAM2B,WAAW,GAAID,EAAD,IAAQ;AAC1BL,IAAAA,YAAY,CAACK,EAAD,EAAK,IAAL,CAAZ;AACA/B,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAHD;;AAKA,QAAMiC,aAAa,GAAG,MAAM;AAC1B7B,IAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACAsB,IAAAA,YAAY,CAACzB,WAAD,EAAc,KAAd,CAAZ;AACD,GAHD;;AAKA,QAAMiC,uBAAuB,GAAIH,EAAD,IAAQ;AACtC3B,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACAF,IAAAA,cAAc,CAAC6B,EAAD,CAAd;AACD,GAHD;;AAKA,sBACE;AAAS,IAAA,SAAS,EAAC,QAAnB;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACE,QAAC,cAAD;AACE,QAAA,EAAE,EAAC,uBADL;AAEE,QAAA,KAAK,EAAC,iBAFR;AAGE,QAAA,QAAQ,EAAEjB,cAHZ;AAAA,gCAKE,QAAC,QAAD,CAAU,IAAV;AAAe,UAAA,QAAQ,EAAC,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAME,QAAC,QAAD,CAAU,IAAV;AAAe,UAAA,QAAQ,EAAC,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE,QAAC,QAAD,CAAU,IAAV;AAAe,UAAA,QAAQ,EAAC,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAUE,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,yBAAtB;AAAA,+BACE,QAAC,IAAD,CAAM,OAAN;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,QAFd;AAGE,UAAA,QAAQ,EAAEK;AAHZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAoBE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,gBACGtB,MAAM,CAACgC,GAAP,CAAW,CAAC;AAAEE,QAAAA,EAAF;AAAMI,QAAAA,KAAN;AAAalB,QAAAA,QAAb;AAAuBO,QAAAA,IAAvB;AAA6BhB,QAAAA,IAA7B;AAAmC4B,QAAAA;AAAnC,OAAD,kBACV;AAAA,gCACE,QAAC,IAAD;AAAA,kCACE,QAAC,IAAD,CAAM,GAAN;AAAU,YAAA,SAAS,EAAC,WAApB;AAAgC,YAAA,GAAG,EAAED;AAArC;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAA,oCACE;AAAA,qCACE,QAAC,KAAD;AAAO,gBAAA,OAAO,EAAC,WAAf;AAAA,0BAA4BlB;AAA5B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AAAI,cAAA,SAAS,EAAC,YAAd;AAAA,wBAA4BO;AAA5B;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE;AAAA,wBAAIY;AAAJ;AAAA;AAAA;AAAA;AAAA,oBALF,EAMG5B,IAAI,iBAAI,QAAC,KAAD;AAAO,cAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANX,eAOE;AAAA,yBACG,CAACA,IAAD,iBACC,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAC,WAAhB;AAA4B,gBAAA,OAAO,EAAE,MAAMwB,WAAW,CAACD,EAAD,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,EAMGvB,IAAI,iBACH,QAAC,MAAD;AACE,gBAAA,OAAO,EAAC,WADV;AAEE,gBAAA,OAAO,EAAE,MAAM0B,uBAAuB,CAACH,EAAD,CAFxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA,WAAWA,EAAX;AAAA;AAAA;AAAA;AAAA,gBADF,eA2BE,QAAC,iBAAD;AACE,UAAA,IAAI,EAAE5B,gBADR;AAEE,UAAA,OAAO,EAAE,MAAMC,mBAAmB,CAAC,KAAD,CAFpC;AAGE,UAAA,kBAAkB,EAAE6B;AAHtB;AAAA;AAAA;AAAA;AAAA,gBA3BF;AAAA,sBADD;AADH;AAAA;AAAA;AAAA;AAAA,YApBF,eAyDE,QAAC,cAAD;AAAgB,MAAA,IAAI,EAAElC,IAAtB;AAA4B,MAAA,OAAO,EAAE,MAAMC,OAAO,CAAC,KAAD;AAAlD;AAAA;AAAA;AAAA;AAAA,YAzDF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6DD,CAxID;;GAAMP,M;;KAAAA,M;AAyIN,eAAeA,MAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport {\n  Badge,\n  Button,\n  Card,\n  Dropdown,\n  DropdownButton,\n  Form,\n} from \"react-bootstrap\";\nimport ConfirmationModal from \"./../../../../components/Modal/ConfirmationModal\";\nimport ModalComponent from \"./../../../../components/Modal/Modal\";\nimport \"./Groups.scss\";\n\nconst API_URL = \"https://run.mocky.io/v3/6a493a14-4155-463c-9f08-24be7e91cb6d\";\n\nconst Groups = ({userGroups}) => {\n  const [initial, setInitialData] = useState([]);\n  const [groups, setGroups] = useState([]);\n  const [show, setShow] = useState(false);\n  const [idToConfirm, setIdToConfirm] = useState('');\n  const [showConfirmation, setShowConfirmation] = useState(false);\n\n  const checkJoinedGroups = () => {\n    const joinedGroups = groups.filter( ({join}) => join === true);\n    // const data =  JSON.parse(sessionStorage.getItem('user'));\n    // data.groups = joinedGroups;\n    userGroups(joinedGroups);\n    //sessionStorage.setItem('user', JSON.stringify(data));\n  };\n\n  const loadData = async () => {\n    const response = await fetch(API_URL);\n    const data = await response.json();\n    setGroups(data);\n    setInitialData(data);\n    checkJoinedGroups();\n  };\n\n  useEffect(() => {\n    loadData();\n    return () => {};\n  }, []);\n\n  const handleSelected = (option) => {\n    setGroups(initial);\n    const filteredData = groups.filter(({ language }) => language === option);\n    if (filteredData.length > 0) {\n      setGroups(filteredData);\n      checkJoinedGroups();\n    }\n  };\n\n  const handleSearchName = (text) => {\n    const groupName = text.target.value;\n    setGroups(initial);\n    const filteredData = groups.filter(\n      ({ name }) => name.trim() === groupName.trim()\n    );\n    if (filteredData.length > 0) {\n      setGroups(filteredData);\n      checkJoinedGroups();\n    }\n  };\n\n  const handleGroups = (value, state) => {\n    const newArray = groups.map((values) => {\n      if (values.id === value) {\n        values.join = state;\n      }\n      return values;\n    });\n    setGroups(newArray);\n    checkJoinedGroups();\n  };\n\n  const handleModel = (id) => {\n    handleGroups(id, true);\n    setShow(true);\n  };\n\n  const handleAbandon = () => {\n    setShowConfirmation(false);\n    handleGroups(idToConfirm, false);\n  };\n\n  const handleModelConfirmation = (id) => {\n    setShowConfirmation(true);\n    setIdToConfirm(id);\n  };\n\n  return (\n    <section className=\"groups\">\n      <h3 className=\"groups__title\">Groups</h3>\n      <div className=\"groups__filters\">\n        <DropdownButton\n          id=\"dropdown-basic-button\"\n          title=\"Dropdown button\"\n          onSelect={handleSelected}\n        >\n          <Dropdown.Item eventKey=\"all\">All</Dropdown.Item>\n          <Dropdown.Item eventKey=\"Javascript\">Javascript</Dropdown.Item>\n          <Dropdown.Item eventKey=\"Typescript\">Typescript</Dropdown.Item>\n        </DropdownButton>\n        <Form.Group className=\"groups__filters__search\">\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Search\"\n            onChange={handleSearchName}\n          />\n        </Form.Group>\n      </div>\n      <div className=\"groups__cards\">\n        {groups.map(({ id, image, language, name, join, description }) => (\n          <>\n            <Card key={id}>\n              <Card.Img className=\"card__img\" src={image} />\n              <Card.Body>\n                <p>\n                  <Badge variant=\"secondary\">{language}</Badge>\n                </p>\n                <h4 className=\"group-name\">{name}</h4>\n                <p>{description}</p>\n                {join && <Badge variant=\"primary\">joined</Badge>}\n                <div>\n                  {!join && (\n                    <Button variant=\"secondary\" onClick={() => handleModel(id)}>\n                      Join\n                    </Button>\n                  )}\n                  {join && (\n                    <Button\n                      variant=\"secondary\"\n                      onClick={() => handleModelConfirmation(id)}\n                    >\n                      Abandon\n                    </Button>\n                  )}\n                </div>\n              </Card.Body>\n            </Card>\n            <ConfirmationModal\n              show={showConfirmation}\n              onClose={() => setShowConfirmation(false)}\n              handleConfirmation={handleAbandon}\n            />\n          </>\n        ))}\n      </div>\n      <ModalComponent show={show} onClose={() => setShow(false)} />\n    </section>\n  );\n};\nexport default Groups;\n"]},"metadata":{},"sourceType":"module"}