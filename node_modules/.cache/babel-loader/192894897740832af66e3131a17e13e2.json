{"ast":null,"code":"var _jsxFileName = \"/Users/vanessaaristizabal/development/react-projects/taller-comfeco/react-bootstrap/src/container/Profile/components/Groups/Groups.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Badge, Button, Card, DropdownButton, Dropdown, Form } from \"react-bootstrap\";\nimport ConfirmationModal from \"../../../../components/Modal/ConfirmationModal\";\nimport ModalComponent from \"../../../../components/Modal/Modal\";\nimport \"./Groups.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = \"https://run.mocky.io/v3/6a493a14-4155-463c-9f08-24be7e91cb6d\";\n\nconst Groups = ({\n  userGroups\n}) => {\n  _s();\n\n  const [groups, setGroups] = useState([]);\n  const [show, setShow] = useState(false);\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const [idGroup, setIdGroup] = useState(\"\");\n\n  const checkJoinedGroups = () => {\n    const joinedGroups = groups.filter(join => join === true);\n    userGroups(joinedGroups);\n  };\n\n  const loadData = async () => {\n    const response = await fetch(API_URL);\n    const data = await response.json();\n    setGroups(data);\n    checkJoinedGroups();\n  };\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const handleModal = id => {\n    setIdGroup(id);\n    setShow(true);\n  };\n\n  const handleModalConfirmation = id => {\n    setIdGroup(id);\n    setShowConfirmation(true);\n  };\n\n  const handleAbandon = () => {\n    setShowConfirmation(false);\n  };\n\n  const handleGroups = (id, state) => {\n    const newArray = groups.map(values => {\n      if (values.id === id) {\n        values.join = state;\n      }\n\n      return values;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"groups\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"groups__title\",\n      children: \"Groups\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"groups__filters\",\n      children: [/*#__PURE__*/_jsxDEV(DropdownButton, {\n        id: \"dropdown-basic-button\",\n        title: \"Dropdown button\",\n        children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          eventKey: \"all\",\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          eventKey: \"Javascript\",\n          children: \"Javascript\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          eventKey: \"Typescript\",\n          children: \"Typescript\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"groups__filters__search\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"groups__cards\",\n      children: groups.map(({\n        image,\n        name,\n        description,\n        language,\n        id,\n        join\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            className: \"card__img\",\n            src: image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(Badge, {\n                variant: \"secondary\",\n                children: language\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: join ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Badge, {\n                  variant: \"primary\",\n                  children: \"joined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"secondary\",\n                  onClick: () => handleModalConfirmation(id),\n                  children: \"Abandon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"secondary\",\n                onClick: () => handleModal(id),\n                children: \"Join\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ConfirmationModal, {\n          show: showConfirmation,\n          onClose: () => setShowConfirmation(false),\n          handleConfirmation: handleAbandon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalComponent, {\n      show: show,\n      onClose: () => setShow(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Groups, \"eLSZRx0DsimkzmuWDbAqzfpcsQ4=\");\n\n_c = Groups;\nexport default Groups;\n\nvar _c;\n\n$RefreshReg$(_c, \"Groups\");","map":{"version":3,"sources":["/Users/vanessaaristizabal/development/react-projects/taller-comfeco/react-bootstrap/src/container/Profile/components/Groups/Groups.js"],"names":["useEffect","useState","Badge","Button","Card","DropdownButton","Dropdown","Form","ConfirmationModal","ModalComponent","API_URL","Groups","userGroups","groups","setGroups","show","setShow","showConfirmation","setShowConfirmation","idGroup","setIdGroup","checkJoinedGroups","joinedGroups","filter","join","loadData","response","fetch","data","json","handleModal","id","handleModalConfirmation","handleAbandon","handleGroups","state","newArray","map","values","image","name","description","language"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport {\n  Badge,\n  Button,\n  Card,\n  DropdownButton,\n  Dropdown,\n  Form,\n} from \"react-bootstrap\";\nimport ConfirmationModal from \"../../../../components/Modal/ConfirmationModal\";\nimport ModalComponent from \"../../../../components/Modal/Modal\";\nimport \"./Groups.scss\";\n\nconst API_URL = \"https://run.mocky.io/v3/6a493a14-4155-463c-9f08-24be7e91cb6d\";\n\nconst Groups = ({ userGroups }) => {\n  const [groups, setGroups] = useState([]);\n  const [show, setShow] = useState(false);\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const [idGroup, setIdGroup] = useState(\"\");\n\n  const checkJoinedGroups = () => {\n    const joinedGroups = groups.filter( (join) => join === true);\n    userGroups(joinedGroups);\n  };\n\n  const loadData = async () => {\n    const response = await fetch(API_URL);\n    const data = await response.json();\n    setGroups(data);\n    checkJoinedGroups();\n  };\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const handleModal = (id) => {\n    setIdGroup(id);\n    setShow(true);\n  };\n\n  const handleModalConfirmation = (id) => {\n    setIdGroup(id);\n    setShowConfirmation(true);\n  };\n\n  const handleAbandon = () => {\n    setShowConfirmation(false);\n  };\n\n  const handleGroups = (id, state) => {\n    const newArray = groups.map((values) => {\n      if(values.id === id){\n        values.join = state;\n      }\n      return values;\n    });\n\n  };\n\n  return (\n    <section className=\"groups\">\n      <h3 className=\"groups__title\">Groups</h3>\n      <div className=\"groups__filters\">\n        <DropdownButton id=\"dropdown-basic-button\" title=\"Dropdown button\">\n          <Dropdown.Item eventKey=\"all\">All</Dropdown.Item>\n          <Dropdown.Item eventKey=\"Javascript\">Javascript</Dropdown.Item>\n          <Dropdown.Item eventKey=\"Typescript\">Typescript</Dropdown.Item>\n        </DropdownButton>\n        <Form.Group className=\"groups__filters__search\">\n          <Form.Control type=\"text\" placeholder=\"Search\" />\n        </Form.Group>\n      </div>\n      <div className=\"groups__cards\">\n        {groups.map(({ image, name, description, language, id, join }) => (\n          <div key={id}>\n            <Card>\n              <Card.Img className=\"card__img\" src={image} />\n              <Card.Body>\n                <p>\n                  <Badge variant=\"secondary\">{language}</Badge>\n                </p>\n                <h4>{name}</h4>\n                <p>{description}</p>\n                <div>\n                  {join  ?  (\n                    <>\n                    <Badge variant=\"primary\">joined</Badge>\n                    <Button\n                      variant=\"secondary\"\n                      onClick={() => handleModalConfirmation(id)}\n                    >\n                      Abandon\n                    </Button>\n                    </>\n                  ) : \n                  (\n                    <Button variant=\"secondary\" onClick={() => handleModal(id)}>\n                      Join\n                    </Button>\n                  )}\n                </div>\n              </Card.Body>\n            </Card>\n            <ConfirmationModal\n              show={showConfirmation}\n              onClose={() => setShowConfirmation(false)}\n              handleConfirmation={handleAbandon}\n            />\n          </div>\n        ))}\n      </div>\n      <ModalComponent show={show} onClose={() => setShow(false)} />\n    </section>\n  );\n};\n\nexport default Groups;\n"]},"metadata":{},"sourceType":"module"}